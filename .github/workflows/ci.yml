name: index_calculator Testing Suite

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        # Bookend python versions
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set environment variables
        run: |
          echo "PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
  
      - name: Install dependencies
        run: |
          source venv/bin/activate
          pip install -r ci/requirements/environment.yml
  
      - name: Install index_calculator
        run: |
          source venv/bin/activate
          python -m pip install --no-deps -e .

      - name: Version info
        run: |
          source venv/bin/activate
          python -m pip list

      - name: Import index_calculator
        run: |
          source venv/bin/activate
          python -c "import index_calculator"

      - name: Run tests
        timeout-minutes: 5
        run: |
          source venv/bin/activate
          python -u -m pytest --cov=index_calculator --cov-report=xml --junitxml=test-results/${{ runner.os }}-${{ matrix.python-version }}.xml

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: RUNNER_OS,PYTHON_VERSION
          name: codecov-umbrella
          fail_ci_if_error: false
